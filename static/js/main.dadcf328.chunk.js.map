{"version":3,"sources":["assets/click.mp3","Components/Shade.jsx","Components/Shades.jsx","Components/ShadesInput.jsx","App.jsx","index.js"],"names":["module","exports","Shade","shade","onColorCopy","useState","copied","setCopied","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","color","audioRef","useRef","shades","setShades","isColor","createShades","Values","console","log","rgbString","current","play","ref","src","require","map","ShadesInput","props","type","placeholder","value","onChange","e","onInputChange","target","href","textDecoration","class","margin","cursor","fontSize","App","setColor","randomColor","ReactDOM","render","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,mC,8ICmC5BC,EAhCD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,oBAAS,GADG,mBACjCC,EADiC,KACzBC,EADyB,KAGxCC,qBAAU,WACR,IAAIC,EAMJ,OALe,IAAXH,IACFG,EAAWC,aAAY,WACrBH,GAAU,KACT,OAEE,WACLI,cAAcF,MAEf,CAACH,IAMJ,OACE,kBAAC,kBAAD,CAAiBM,KAAMT,EAAMU,YAAaC,OAAQ,kBAJlDP,GAAU,QACVH,MAIE,yBAAKW,UAAU,QAAQC,MAAO,CAAEC,gBAAiBd,EAAMU,cACpDP,EACC,0BAAMS,UAAU,UAAhB,WAEA,8BAAOZ,EAAMU,gBCMRK,EA5BA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAWC,mBADW,EAEAhB,mBAAS,IAFT,mBAErBiB,EAFqB,KAEbC,EAFa,KAG5Bf,qBAAU,WACJgB,IAAQL,IAAQM,EAAaN,KAChC,CAACA,IAEJ,IAAMM,EAAe,SAACN,GACpB,IAAMG,EAAS,IAAII,IAAOP,GAAOG,OAAO,GACxCK,QAAQC,IAAIN,EAAO,GAAGO,aACtBN,EAAUD,IAGNlB,EAAc,WAClBgB,EAASU,QAAQC,QAEnB,OACE,oCACE,yBAAKhB,UAAU,UACb,2BAAOiB,IAAKZ,EAAUa,IAAKC,EAAQ,MAClCZ,EAAOa,KAAI,SAAChC,GAAD,OACV,kBAAC,EAAD,CAAOA,MAAOA,EAAOC,YAAaA,UCgC7BgC,EAzDK,SAACC,GACnB,OACE,oCACE,yBAAKtB,UAAU,iBACb,yBAAKA,UAAU,cACb,0BAAMA,UAAU,WAAhB,KADF,OACyC,IACvC,0BAAMA,UAAU,WAAhB,KAFF,UAIA,yBAAKA,UAAU,cACb,2BACEuB,KAAK,OACLvB,UAAU,eACVwB,YAAY,oBACZC,MAAOH,EAAMlB,MACbsB,SAAU,SAACC,GAAD,OAAOL,EAAMM,cAAcD,EAAEE,OAAOJ,UAEhD,uBAAGzB,UAAU,aAAa8B,KAAK,IAAI7B,MAAO,CAAE8B,eAAgB,SAC1D,uBAAGC,MAAM,mBAIb,yBAAKhC,UAAU,SACb,uBACE8B,KAAK,kCACL7B,MAAO,CAAE8B,eAAgB,OAAQ3B,MAAO,SAExC,0BACEJ,UAAU,eACVC,MAAO,CAAEgC,OAAQ,MAAOC,OAAQ,UAAWC,SAAU,WAIzD,uBACEL,KAAK,+CACL7B,MAAO,CAAE8B,eAAgB,OAAQ3B,MAAO,SAExC,0BACEJ,UAAU,iBACVC,MAAO,CAAEgC,OAAQ,MAAOC,OAAQ,UAAWC,SAAU,WAIzD,uBACEL,KAAK,4CACL7B,MAAO,CAAE8B,eAAgB,OAAQ3B,MAAO,SAExC,0BACEJ,UAAU,kBACVC,MAAO,CAAEgC,OAAQ,MAAOC,OAAQ,UAAWC,SAAU,e,gBCxBpDC,EArBH,WAAO,IAAD,EACU9C,mBAAS,SADnB,mBACTc,EADS,KACFiC,EADE,KAGhB5C,qBAAU,WACR4C,EAASC,OACR,IAMH,OACE,oCACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,CAAaI,MAAOA,EAAOwB,cAPX,SAACH,GACrBY,EAASZ,MAOL,kBAAC,EAAD,CAAQrB,MAAOA,O,MCfvBmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.dadcf328.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.d392c03a.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst Shade = ({ shade, onColorCopy }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (copied === true) {\r\n      interval = setInterval(() => {\r\n        setCopied(false);\r\n      }, 1500);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [copied]);\r\n\r\n  const onCopy = () => {\r\n    setCopied(true);\r\n    onColorCopy();\r\n  };\r\n  return (\r\n    <CopyToClipboard text={shade.hexString()} onCopy={() => onCopy()}>\r\n      <div className=\"shade\" style={{ backgroundColor: shade.hexString() }}>\r\n        {copied ? (\r\n          <span className=\"copied\">Copied!</span>\r\n        ) : (\r\n          <span>{shade.hexString()}</span>\r\n        )}\r\n      </div>\r\n    </CopyToClipboard>\r\n  );\r\n};\r\n\r\nexport default Shade;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Values from \"values.js\";\r\nimport isColor from \"is-color\";\r\nimport Shade from \"./Shade\";\r\n\r\n// destructing {color} instead of props.color\r\nconst Shades = ({ color }) => {\r\n  const audioRef = useRef();\r\n  const [shades, setShades] = useState([]);\r\n  useEffect(() => {\r\n    if (isColor(color)) createShades(color);\r\n  }, [color]);\r\n\r\n  const createShades = (color) => {\r\n    const shades = new Values(color).shades(1);\r\n    console.log(shades[0].rgbString());\r\n    setShades(shades);\r\n  };\r\n\r\n  const onColorCopy = () => {\r\n    audioRef.current.play();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"shades\">\r\n        <audio ref={audioRef} src={require(\"../assets/click.mp3\")} />\r\n        {shades.map((shade) => (\r\n          <Shade shade={shade} onColorCopy={onColorCopy} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shades;\r\n","import React from \"react\";\r\n\r\nconst ShadesInput = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"shades-search\">\r\n        <div className=\"brand-name\">\r\n          <span className=\"Fletter\">C</span>olor{\" \"}\r\n          <span className=\"Sletter\">F</span>etcher\r\n        </div>\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"shades-input\"\r\n            placeholder=\"search for colors\"\r\n            value={props.color}\r\n            onChange={(e) => props.onInputChange(e.target.value)}\r\n          />\r\n          <a className=\"search-btn\" href=\"#\" style={{ textDecoration: \"none\" }}>\r\n            <i class=\"fa fa-search\"></i>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n          <a\r\n            href=\"https://github.com/jvnaveenbabu\"\r\n            style={{ textDecoration: \"none\", color: \"#333\" }}\r\n          >\r\n            <span\r\n              className=\"fa fa-github\"\r\n              style={{ margin: \"4px\", cursor: \"pointer\", fontSize: \"26px\" }}\r\n            ></span>\r\n          </a>\r\n\r\n          <a\r\n            href=\"https://www.linkedin.com/in/j-v-naveen-babu/\"\r\n            style={{ textDecoration: \"none\", color: \"#333\" }}\r\n          >\r\n            <span\r\n              className=\"fa fa-linkedin\"\r\n              style={{ margin: \"4px\", cursor: \"pointer\", fontSize: \"26px\" }}\r\n            ></span>\r\n          </a>\r\n\r\n          <a\r\n            href=\"https://www.instagram.com/webdev.commune/\"\r\n            style={{ textDecoration: \"none\", color: \"#333\" }}\r\n          >\r\n            <span\r\n              className=\"fa fa-instagram\"\r\n              style={{ margin: \"4px\", cursor: \"pointer\", fontSize: \"26px\" }}\r\n            ></span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShadesInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Shades from \"./Components/Shades\";\r\nimport ShadesInput from \"./Components/ShadesInput\";\r\nimport randomColor from \"randomcolor\";\r\n\r\nconst App = () => {\r\n  const [color, setColor] = useState(\"Black\");\r\n\r\n  useEffect(() => {\r\n    setColor(randomColor);\r\n  }, []);\r\n  /* for changing the color */\r\n  const onInputChange = (value) => {\r\n    setColor(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <ShadesInput color={color} onInputChange={onInputChange} />\r\n        <Shades color={color} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}